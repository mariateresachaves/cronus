/* Generated By:JJTree: Do not edit this line. ASTNodeDegree.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package main;

import java.io.PrintWriter;

public class ASTNodeDegree extends SimpleNode {
	
	public Boolean semantic_error = false;

	public ASTNodeDegree(int id) {

		super(id);

	}

	public ASTNodeDegree(CronusGrammarParser p, int id) {

		super(p, id);

	}

	@Override
	public void interpret() {

		// DEGREE COMP Value

		jjtGetChild(2).interpret();

	}

	@Override
	public void toGremlin(PrintWriter writer) {
		
		// NodeDegree -> DEGREE COMP Value
		// Node[] nos = g.nodes(label="knows", degree < 3);
		// nos = g.V.filter{it.outE('knows').hasNext(); it.outE.toList().size() < 3}.toList()
		
		if(!semantic_error) {
			
			writer.print("it.outE.toList().size() " + jjtGetChild(1).getVal().toString());
			jjtGetChild(2).toGremlin(writer);
			
		}
		
	}
	
}
/*
 * JavaCC - OriginalChecksum=247899e96275778e2d4dbbedb66da088 (do not edit this
 * line)
 */
