/* Generated By:JJTree: Do not edit this line. ASTSearchGraph.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package main;

import java.io.PrintWriter;

public class ASTSearchGraph extends SimpleNode {

	public ASTSearchGraph(int id) {

		super(id);

	}

	public ASTSearchGraph(CronusGrammarParser p, int id) {

		super(p, id);

	}

	@Override
	public void interpret() {

		// NodeListDec EQ VARIABLE DOT SearchType OPAR VARIBLE COMMA VARIABLE
		// MoreOptions CPAR SCOL
		if (jjtGetChild(0) instanceof ASTNodeListDec) {

			if (symtab.containsKey(jjtGetChild(1).getVal()))
				System.err.println(ErrorConstant.DUPLICATE_ENTRY + jjtGetChild(1).getVal() + " of type Node[].");

			jjtGetChild(0).interpret(jjtGetChild(2).getVal().toString());
			
		}
		// VARIABLE EQ VARIABLE DOT SearchType OPAR VARIBLE COMMA VARIABLE
		// MoreOptions CPAR SCOL
		else {

			if (symtab.containsKey(jjtGetChild(0).getVal())) {

				if (!(symtab.get(jjtGetChild(0).getVal()) instanceof NodeList)) {

					System.out.println(ErrorConstant.INCOMPATIBLE_TYPES + jjtGetChild(0).getVal() + " is not of type Node[].");
					return;

				}
				else {
					symtab.put(jjtGetChild(0).getVal(), jjtGetChild(2).getVal().toString());
				}
			} else {

				System.out.println(ErrorConstant.SYMBOL_NOT_FOUND + jjtGetChild(0).getVal() + ".");
				return;

			}

		}

		// Right Side
		verify_graph(2);
		verify_node(6);
		verify_node(8);

		// SearchType
		jjtGetChild(4).interpret();

		// MoreOptions
		jjtGetChild(9).interpret();

	}

	public void verify_graph(Integer i) {

		if (symtab.containsKey(jjtGetChild(i).getVal())) {

			if (!(symtab.get(jjtGetChild(i).getVal()) instanceof Graph)) {

				System.out
						.println(ErrorConstant.INCOMPATIBLE_TYPES + jjtGetChild(i).getVal() + " is not of type Graph.");
				return;

			}

		} else {

			System.out.println(ErrorConstant.SYMBOL_NOT_FOUND + jjtGetChild(i).getVal() + ".");
			return;

		}

	}

	public void verify_node(Integer i) {

		if (symtab.containsKey(jjtGetChild(i).getVal())) {

			if (!(symtab.get(jjtGetChild(i).getVal()) instanceof NodeT)) {

				System.out.println(ErrorConstant.INCOMPATIBLE_TYPES + jjtGetChild(i).getVal() + " is not of type Node.");
				return;

			}

		} else {

			System.out.println(ErrorConstant.SYMBOL_NOT_FOUND + jjtGetChild(i).getVal() + ".");
			return;

		}

	}

	@Override
	public void toGremlin(PrintWriter writer){
		
	}
}
/*
 * JavaCC - OriginalChecksum=846292d1a956497664ce7a1a19b15629 (do not edit this
 * line)
 */
